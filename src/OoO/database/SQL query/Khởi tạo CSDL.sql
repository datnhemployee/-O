CREATE DATABASE OoO
GO 

USE OoO
GO 

CREATE TABLE MAU(
	MAUID INT NOT NULL,
	RED INT NOT NULL DEFAULT(255),
	BLUE INT NOT NULL DEFAULT(255),
	GREEN INT NOT NULL DEFAULT(255),
	ALPHA INT NOT NULL DEFAULT(255)
)

CREATE TABLE BANG(
	BANGID INT NOT NULL,
	TEN NVARCHAR(100) NOT NULL,
	MOTA NVARCHAR(200) NULL,
	NGAYBAO_GANNHAT DATE NULL DEFAULT(NULL),
	NGAYKETTHUC_XANHAT DATE NULL DEFAULT(NULL),
	SOTHEHOANTAT INT NOT NULL DEFAULT(0),
	TONGSOTHE INT NOT NULL DEFAULT(0),
	MauID INT NOT NULL,
	HinhID INT NULL
)

CREATE TABLE HINH(
	HINHID INT NOT NULL,
	PATH NVARCHAR(100) NOT NULL
)

CREATE TABLE THE(
	THEID INT NOT NULL,
	TEN NVARCHAR(100) NOT NULL,
	BANGID INT  NOT NULL,
	NGAYBAO_KETIEP DATE NULL DEFAULT(NULL),
	HANCHOT DATE NULL,
	SOBUOCHOANTAT INT NOT NULL DEFAULT(0),
	TONGSOBUOC INT NOT NULL DEFAULT(0)
)
CREATE TABLE BUOC(
	BUOCID INT NOT NULL,
	THEID INT NOT NULL,
	NOIDUNG NVARCHAR(100),
	TRANGTHAI BIT NOT NULL DEFAULT(0)
)
CREATE TABLE OOO(
	OOOID INT NOT NULL,
	NGAYBAO DATE NULL DEFAULT(NULL),
)
CREATE TABLE OOO_THE(
	OOOID INT NOT NULL,
	THEID INT NOT NULL
)

CREATE TABLE OOO_ACCOUNT(
	OOOID INT NOT NULL,
	ACCOUNTID INT NOT NULL
)

CREATE TABLE ACCOUNT(
	ACCOUNTID INT NOT NULL,
	ACCOUNTTYPEID INT NOT NULL
)
CREATE TABLE ACCOUNTTYPE(
	ACCOUNTTYPEID INT NOT NULL,
	NAME NVARCHAR(50) NOT NULL
)
ALTER TABLE MAU
ADD CONSTRAINT PRKEY_MAU PRIMARY KEY(MAUID)



ALTER TABLE HINH 
ADD CONSTRAINT PRKEY_HINH PRIMARY KEY(HINHID)



ALTER TABLE BANG 
ADD 
CONSTRAINT PK_BANG PRIMARY KEY(BANGID),
CONSTRAINT FK_MAUID FOREIGN KEY(MAUID) REFERENCES MAU(MAUID),
CONSTRAINT FK_HINHID FOREIGN KEY(HINHID) REFERENCES HINH(HINHID)



ALTER TABLE THE 
ADD 
CONSTRAINT PK_THE PRIMARY KEY(THEID),
CONSTRAINT FK_BANGID FOREIGN KEY(BANGID) REFERENCES BANG(BANGID)



ALTER TABLE BUOC 
ADD 
CONSTRAINT PK_BUOC PRIMARY KEY(BUOCID),
CONSTRAINT FK_THEID FOREIGN KEY(THEID) REFERENCES THE(THEID)



ALTER TABLE OOO 
ADD 
CONSTRAINT PK_OOO PRIMARY KEY(OOOID)



ALTER TABLE OOO_THE 
ADD 
CONSTRAINT PK_OOO_THE PRIMARY KEY(OOOID,THEID),
CONSTRAINT FK_THEID_OOOTHE_THE FOREIGN KEY(THEID) REFERENCES THE(THEID),
CONSTRAINT FK_OOOID FOREIGN KEY(OOOID) REFERENCES OOO(OOOID)



ALTER TABLE ACCOUNT  
ADD
CONSTRAINT PK_ACCOUNT PRIMARY KEY(ACCOUNTID),
CONSTRAINT FK_ACCOUNTTYPEID FOREIGN KEY(ACCOUNTTYPEID) REFERENCES ACCOUNTTYPE(ACCOUNTTYPEID)


ALTER TABLE OOO_ACCOUNT 
ADD 
CONSTRAINT PK_OOO_ACCOUNT PRIMARY KEY(OOOID,ACCOUNTID),
CONSTRAINT FK_OOOID_OOOACCOUNT FOREIGN KEY(OOOID) REFERENCES OOO(OOOID),
CONSTRAINT FK_ACCOUNTID FOREIGN KEY(ACCOUNTID) REFERENCES ACCOUNT(ACCOUNTID)



ALTER TABLE ACCOUNTTYPE
ADD 
CONSTRAINT PK_ACCOUNTTYPE PRIMARY KEY(ACCOUNTTYPEID)

ALTER TABLE ACCOUNT 
ADD URL NVARCHAR(100) NOT NULL

GO
CREATE TRIGGER TRG_FOR_INSTEAD_OF_BANG
ON BANG
INSTEAD OF DELETE
AS 
BEGIN
	DECLARE @ID INT

	SELECT @ID = BANGID FROM deleted

	DELETE FROM THE 
	WHERE BANGID = @ID

	DELETE FROM BANG
	WHERE BANGID = @ID
END

GO
CREATE TRIGGER TRG_AFTER_INS_THE
ON THE
AFTER INSERT
AS 
BEGIN
	DECLARE @CURDATE DATE, 
			@OOO DATE, 
			@DDLINE DATE,
			@ID INT

	SELECT @CURDATE = GETDATE()

	SELECT @DDLINE = (SELECT HANCHOT
					FROM inserted I)

	SELECT @OOO = (SELECT NGAYBAO_KETIEP
					FROM inserted I)
	
	SELECT @ID =(SELECT BANGID
				FROM inserted)

	UPDATE BANG
	SET NGAYKETTHUC_XANHAT = @DDLINE
	WHERE	BANGID = @ID
			AND (NGAYKETTHUC_XANHAT > @DDLINE
			OR NGAYKETTHUC_XANHAT IS NULL)

	UPDATE BANG 
	SET TONGSOTHE += 1,
		NGAYKETTHUC_XANHAT = @DDLINE,
		NGAYBAO_GANNHAT = @OOO
	WHERE BANGID =@ID
	
END
GO
CREATE TRIGGER TRG_INSTEAD_OF_DEL_THE
ON THE
INSTEAD OF DELETE
AS 
BEGIN
	DELETE FROM BUOC 
	WHERE THEID IN (SELECT THEID FROM deleted)
	
	DELETE FROM OOO_THE
	WHERE THEID IN (SELECT THEID FROM deleted)

	DELETE FROM THE
	WHERE THEID IN (SELECT THEID FROM deleted)
END
GO
CREATE TRIGGER TRG_AFTER_UPD_THE
ON THE
AFTER UPDATE
AS 
BEGIN
	DECLARE @CURDATE DATE

	SELECT @CURDATE = (SELECT GETDATE())
	UPDATE BANG 
	SET TONGSOTHE -= 1
	WHERE BANGID IN (SELECT BANG.BANGID
					FROM deleted INNER JOIN BANG
						ON deleted.BANGID = BANG.BANGID
					GROUP BY BANG.BANGID)
			AND TONGSOTHE <> 0
	UPDATE BANG
	SET TONGSOTHE += 1
	WHERE BANGID IN (SELECT BANG.BANGID
					FROM inserted INNER JOIN BANG
						ON inserted.BANGID = BANG.BANGID
					GROUP BY BANG.BANGID)

	

	UPDATE BANG 
	SET NGAYBAO_GANNHAT = C.NGAYBAO_GANNHAT,
		NGAYKETTHUC_XANHAT = C.NGAYKETTHUC_XANHAT
	FROM BANG B INNER JOIN (SELECT D.BANGID,
									MIN(T.NGAYBAO_KETIEP) NGAYBAO_GANNHAT,
									MAX(T.HANCHOT) NGAYKETTHUC_XANHAT
							FROM THE T, (SELECT BANG.BANGID BANGID
										FROM deleted INNER JOIN BANG
										ON deleted.BANGID = BANG.BANGID
										GROUP BY BANG.BANGID) D
							WHERE T.BANGID = D.BANGID
							AND T.NGAYBAO_KETIEP > @CURDATE
							GROUP BY D.BANGID) C
				ON B.BANGID = C.BANGID
	WHERE B.BANGID = C.BANGID

	UPDATE BANG 
	SET NGAYBAO_GANNHAT = C.NGAYBAO_GANNHAT,
		NGAYKETTHUC_XANHAT = C.NGAYKETTHUC_XANHAT
	FROM BANG B INNER JOIN (SELECT I.BANGID,
									MIN(T.NGAYBAO_KETIEP) NGAYBAO_GANNHAT,
									MAX(T.HANCHOT) NGAYKETTHUC_XANHAT
							FROM THE T, (SELECT BANG.BANGID BANGID
										FROM inserted INNER JOIN BANG
										ON inserted.BANGID = BANG.BANGID
										GROUP BY BANG.BANGID) I
							WHERE T.BANGID = I.BANGID
							AND T.NGAYBAO_KETIEP > @CURDATE
							GROUP BY I.BANGID) C
				ON B.BANGID = C.BANGID
	WHERE B.BANGID = C.BANGID
END
GO
CREATE TRIGGER TRG_AFTER_DEL_THE
ON THE
AFTER DELETE
AS 
BEGIN
	DECLARE @CURDATE DATE

	SELECT @CURDATE = (SELECT GETDATE())
	UPDATE BANG
	SET SOTHEHOANTAT -= 1
	WHERE BANGID IN (SELECT BANG.BANGID
					FROM deleted INNER JOIN BANG
						ON deleted.BANGID = BANG.BANGID
					WHERE TONGSOBUOC = SOBUOCHOANTAT AND
						TONGSOBUOC <> 0 AND
						TONGSOTHE <> 0
					GROUP BY BANG.BANGID)
		AND	SOTHEHOANTAT <> 0
	UPDATE BANG 
	SET TONGSOTHE -= 1
	WHERE BANGID IN (SELECT BANG.BANGID
					FROM deleted INNER JOIN BANG
						ON deleted.BANGID = BANG.BANGID
					GROUP BY BANG.BANGID)
			AND	TONGSOTHE <> 0
	UPDATE BANG 
	SET NGAYBAO_GANNHAT = C.NGAYBAO_GANNHAT,
		NGAYKETTHUC_XANHAT = C.NGAYKETTHUC_XANHAT
	FROM BANG B INNER JOIN (SELECT D.BANGID,
									MIN(T.NGAYBAO_KETIEP) NGAYBAO_GANNHAT,
									MAX(T.HANCHOT) NGAYKETTHUC_XANHAT
							FROM THE T, (SELECT BANG.BANGID BANGID
										FROM deleted INNER JOIN BANG
										ON deleted.BANGID = BANG.BANGID
										GROUP BY BANG.BANGID) D
							WHERE T.BANGID = D.BANGID
							AND T.NGAYBAO_KETIEP > @CURDATE
							GROUP BY D.BANGID) C
				ON B.BANGID = C.BANGID
	WHERE B.BANGID = C.BANGID

	UPDATE BANG
	SET NGAYBAO_GANNHAT = NULL
	WHERE BANGID NOT IN(SELECT BANGID 
						FROM THE
						GROUP BY BANGID)
END
GO
CREATE TRIGGER TRG_AFTER_INS_BUOC
ON BUOC
AFTER INSERT
AS
BEGIN
	DECLARE @TRANGTHAI BIT,
			@THEID INT
	SELECT @THEID = (SELECT THEID FROM inserted)
	SELECT @TRANGTHAI = (SELECT TRANGTHAI FROM inserted)

	IF(@TRANGTHAI = 1)
	BEGIN
		UPDATE THE
		SET SOBUOCHOANTAT += 1
		WHERE THEID = @THEID
		
	END
	UPDATE THE
	SET TONGSOBUOC += 1
	WHERE THEID = @THEID

	UPDATE BANG
	SET SOTHEHOANTAT +=1
	WHERE BANGID IN(
			SELECT BANGID 
			FROM THE 
			WHERE THEID = @THEID AND
			SOBUOCHOANTAT = TONGSOBUOC AND
			SOBUOCHOANTAT <> 0 AND
			TONGSOBUOC <> 0)
	
END 
GO
CREATE TRIGGER TRG_AFTER_UPD_BUOC
ON BUOC
AFTER UPDATE
AS
BEGIN
	UPDATE THE 
	SET TONGSOBUOC -= 1
	WHERE THEID IN	(SELECT THEID
						FROM deleted
						GROUP BY THEID) 
	
	UPDATE THE 
	SET SOBUOCHOANTAT -= (SELECT COUNT(THEID)
					FROM deleted
					WHERE TRANGTHAI <> 0)
	WHERE THEID IN	(SELECT THEID
					FROM deleted
					WHERE TRANGTHAI <> 0
					GROUP BY THEID)

	UPDATE THE 
	SET TONGSOBUOC += 1
	WHERE THEID IN	(SELECT THEID
						FROM inserted
						GROUP BY THEID) 
	
	UPDATE THE 
	SET SOBUOCHOANTAT += (SELECT COUNT(THEID)
					FROM inserted
					WHERE TRANGTHAI <> 0)
	WHERE THEID IN	(SELECT THEID
					FROM inserted
					WHERE TRANGTHAI <> 0
					GROUP BY THEID)

	UPDATE BANG
	SET SOTHEHOANTAT = A.SOTHEHOANTAT
	FROM BANG B, (SELECT
						BANGID, 
						COUNT(BANGID) SOTHEHOANTAT
					FROM THE
					WHERE TONGSOBUOC = SOBUOCHOANTAT
					AND TONGSOBUOC <> 0
					GROUP BY BANGID) A
	WHERE  A.BANGID =B.BANGID

	UPDATE BANG
	SET SOTHEHOANTAT = TONGSOTHE - SOTHECHUAHOANTAT
	FROM BANG B, (SELECT
						BANGID, 
						COUNT(BANGID) SOTHECHUAHOANTAT
					FROM THE
					WHERE TONGSOBUOC <> SOBUOCHOANTAT
					GROUP BY BANGID) A
	WHERE  A.BANGID =B.BANGID
END
GO
CREATE TRIGGER TRG_AFTER_DEL_BUOC
ON BUOC
AFTER DELETE
AS
BEGIN
	UPDATE THE
	SET SOBUOCHOANTAT -= 1
	WHERE THEID IN (
		SELECT THEID 
		FROM deleted
		WHERE TRANGTHAI <> 0)
		AND SOBUOCHOANTAT <> 0
	UPDATE BANG
	SET SOTHEHOANTAT -=1
	WHERE BANGID IN(SELECT BANGID 
			FROM THE 
			WHERE THEID IN(SELECT THEID
							FROM deleted
							WHERE SOBUOCHOANTAT = TONGSOBUOC))
		AND SOTHEHOANTAT <> 0
	UPDATE THE
	SET TONGSOBUOC -= 1
	WHERE THEID IN (SELECT THEID 
					FROM deleted)
		AND TONGSOBUOC <> 0

	
END
GO
CREATE TRIGGER TRG_AFTER_INS_OOOTHE
ON OOO_THE
AFTER INSERT
AS
BEGIN
	DECLARE @OOOID INT,
			@THEID INT,
			@NGAYBAO_KETIEP DATE,
			@CURDATE DATE

	SELECT @CURDATE = GETDATE()
	SELECT @OOOID = (SELECT OOOID FROM inserted)
	SELECT @THEID = (SELECT THEID FROM inserted)
	SELECT @NGAYBAO_KETIEP = 
					(SELECT MIN(NGAYBAO)
					 FROM OOO 
					 WHERE OOOID = @OOOID 
					 AND NGAYBAO > @CURDATE)
	UPDATE THE
	SET NGAYBAO_KETIEP = @NGAYBAO_KETIEP
	WHERE THEID = @THEID

	UPDATE BANG
	SET NGAYBAO_GANNHAT = T.NGAYBAO_GANNHAT,
		NGAYKETTHUC_XANHAT = T.NGAYKETTHUC_XANHAT
	FROM (
		SELECT	BANGID,
				MIN(NGAYBAO_KETIEP) NGAYBAO_GANNHAT,
				MAX(HANCHOT) NGAYKETTHUC_XANHAT
		FROM THE 
		GROUP BY BANGID) T INNER JOIN BANG B
	ON T.BANGID = B.BANGID
	WHERE B.BANGID = T.BANGID
END
GO
CREATE TRIGGER TRG_AFTER_DEL_OOOTHE
ON OOO_THE
AFTER DELETE
AS
BEGIN
	DECLARE @CURDATE DATE

	SELECT @CURDATE = GETDATE()

	UPDATE THE 
	SET NGAYBAO_KETIEP = C.NGAYBAO
	FROM (SELECT OT.THEID ID,
				 MIN(O.NGAYBAO) NGAYBAO
			FROM OOO O INNER JOIN OOO_THE OT
			ON O.OOOID = OT.OOOID
			WHERE O.NGAYBAO > @CURDATE
			GROUP BY OT.THEID) C, THE T
	WHERE T.THEID = C.ID

	UPDATE THE 
	SET NGAYBAO_KETIEP = NULL
	WHERE THEID NOT IN(SELECT THEID	
						FROM OOO_THE)
END
GO
CREATE TRIGGER TRG_FOR_INS_OOO
ON OOO
FOR INSERT
AS
BEGIN
	DECLARE @CURDATE DATE,
			@NGAYBAO DATE 
	SELECT @CURDATE = GETDATE()
	SELECT @NGAYBAO = (SELECT NGAYBAO FROM inserted)
	IF(@NGAYBAO < @CURDATE)
	BEGIN
		RAISERROR(N'Không thể thêm ngày báo trước ngày hiện tại',10,1)
		ROLLBACK TRAN
	END

	UPDATE THE
	SET NGAYBAO_KETIEP = @NGAYBAO
	WHERE	THEID IN(SELECT THEID 
					FROM OOO_THE O INNER JOIN inserted I
					ON O.OOOID = I.OOOID) 
			AND (NGAYBAO_KETIEP > @NGAYBAO
			OR NGAYBAO_KETIEP IS NULL)

END
GO
CREATE TRIGGER TRG_INSTEAD_OF_DEL_OOO
ON OOO
INSTEAD OF DELETE
AS
BEGIN
	DELETE FROM OOO_ACCOUNT
	WHERE OOOID IN (SELECT OOOID 
					FROM deleted)
	DELETE FROM OOO
	WHERE OOOID IN (SELECT OOOID 
					FROM deleted)
END
GO
CREATE TRIGGER TRG_INSTEAD_OF_DEL_ACC
ON ACCOUNT
INSTEAD OF DELETE
AS
BEGIN
	DELETE FROM OOO_ACCOUNT
	WHERE ACCOUNTID IN (SELECT ACCOUNTID 
					FROM deleted)

	DELETE FROM ACCOUNT
	WHERE ACCOUNTID IN (SELECT ACCOUNTID 
					FROM deleted)
END

INSERT INTO MAU VALUES (1,127,77,87,255)
INSERT INTO HINH VALUES (1,N'D:\Java SE App\New Folder\Project_15520104_15520312\src\userBackground\hinh1.png')

INSERT INTO BANG(BANGID,TEN,MOTA,MauID,HinhID) VALUES (1,N'Phân tích thiết kế hệ thống',N'Cô Phụng',1,1)
INSERT INTO BANG(BANGID,TEN,MOTA,MauID,HinhID) VALUES (2,N'Nhập môn lập trình java',N'Thầy Anh',1,1)

INSERT INTO THE(THEID,BANGID,TEN,HANCHOT) VALUES (1,1,N'Chương 1','7/8/2018')
INSERT INTO THE(THEID,BANGID,TEN,HANCHOT) VALUES (2,1,N'Chương 1','7/8/2018')
INSERT INTO THE(THEID,BANGID,TEN,HANCHOT) VALUES (3,2,N'Chương 1','7/8/2018')

INSERT INTO BUOC(BUOCID,THEID,NOIDUNG,TRANGTHAI) VALUES (1,1,N'Bài 1',0)
INSERT INTO BUOC(BUOCID,THEID,NOIDUNG,TRANGTHAI) VALUES (2,1,N'Bài 2',1)
INSERT INTO BUOC(BUOCID,THEID,NOIDUNG,TRANGTHAI) VALUES (3,2,N'Bài 1',1)
INSERT INTO BUOC(BUOCID,THEID,NOIDUNG,TRANGTHAI) VALUES (4,3,N'Bài 1',1)

INSERT INTO OOO(OOOID,NGAYBAO) VALUES (1,'8/8/2018')
INSERT INTO OOO(OOOID,NGAYBAO) VALUES (2,'8/3/2018')
INSERT INTO OOO(OOOID,NGAYBAO) VALUES (3,'8/5/2018')

INSERT INTO OOO_THE(OOOID,THEID) VALUES (1,1)
INSERT INTO OOO_THE(OOOID,THEID) VALUES (1,3)
INSERT INTO OOO_THE(OOOID,THEID) VALUES (3,3)
INSERT INTO OOO_THE(OOOID,THEID) VALUES (2,3)